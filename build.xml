<project name="Responsio" default="war" basedir=".">
    <description>ChatBot</description>

    <!-- set build versioning -->

    <property name="version.responsio" value="0.1"/>
    <property name="version.opennlp" value="2.1.0"/>
    <property name="version.gson" value="2.10"/>
    <property name="version.junit" value="4.13.2"/>
    <property name="version.hamcrest" value="1.3"/>
    <property name="version.servlet-api" value="5.0.0"/>


    <!-- set global properties for this build -->

    <property name="dir.build" location="build"/>
    <property name="dir.dist" location="dist"/>
    <property name="dir.build.test" location="build-test"/>


    <!-- Set classpath -->

    <path id="classpath.compile">
        <fileset dir="libs">
            <include name="opennlp-tools-${version.opennlp}.jar"/>
            <include name="gson-${version.gson}.jar"/>
            <include name="jakarta.servlet-api-${version.servlet-api}.jar"/>
        </fileset>
    </path>

    <path id="classpath.compile.test">
        <path refid="classpath.compile"/>
        <pathelement location="${dir.build}"/>
        <pathelement path="libs/junit-${version.junit}.jar"/>
        <pathelement path="libs/hamcrest-core-${version.hamcrest}.jar"/>
    </path>

    <path id="classpath.test">
        <path refid="classpath.compile.test"/>
        <pathelement location="${dir.build.test}"/>
    </path>


    <!-- Initialization target -->

    <target name="init">
        <tstamp/>
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.build.test}"/>
    </target>


    <!-- Compilation target -->

    <target name="compile" depends="init,downloads" description="Compile Java source code">
        <javac srcdir="src/main/java" destdir="${dir.build}" includeantruntime="false">
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-g:lines,source"/>
            <compilerarg value="-Xlint:deprecation"/>
            <classpath refid="classpath.compile"/>
        </javac>
    </target>

    <target name="compile-tests" depends="compile" description="Compile Unit Tests">
        <javac srcdir="src/test/java"  destdir="${dir.build.test}" includeantruntime="false">
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-g:lines,source"/>
            <classpath refid="classpath.compile.test"/>
        </javac>
    </target>


    <!-- Jar file target -->

    <target name="jar" depends="compile" description="generate the distribution">
        <mkdir dir="${dir.dist}/"/>
        <jar jarfile="${dir.dist}/responsio-${version.responsio}.jar">
            <fileset dir="${dir.build}"/>
            <fileset dir="src/main/resources">
                <include name="**/*.json"/>
            </fileset>
        </jar>
    </target>


    <!-- Clean target -->

    <target name="clean" description="clean up">
        <delete dir="${dir.build}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.build.test}"/>
    </target>
    

    <!-- War file target -->

    <target name="war" depends="jar">
        <war destfile="${dir.dist}/responsio-${version.responsio}.war" webxml="src/main/webapp/WEB-INF/web.xml">
            <!-- Add in all the support libraries -->

            <lib dir="libs">
                <include name="opennlp-tools-${version.opennlp}.jar"/>
                <include name="gson-${version.gson}.jar"/>
            </lib>

            <!-- Add in all the core code class files -->
            
            <classes dir="${dir.build}"/>
            <classes dir="src/main/resources">
                <include name="**/*.json"/>
            </classes>

            <!-- Add in data model files -->
            <webinf dir=".">

                <include name="data/models/opennlp/en-pos-maxent.bin"/>
                <include name="data/models/opennlp/en-lemmatizer.dict"/>
                <include name="data/models/opennlp/lang.bin"/>

            </webinf>

            <fileset dir="src/main/webapp">
                <include name="javascript/*"/>
                <include name="html/*"/>
                <include name="css/*"/>
                <include name="images/*"/>
            </fileset>
        </war>
    </target>


    <!-- Test target -->
    
    <target name="test" depends="compile-tests" description="Run unit tests">
        <junit printsummary="true" haltonfailure="no" fork="true">
            <classpath refid="classpath.test" />

            <batchtest fork="yes" >
                <formatter type="plain" usefile="false"/>
                <fileset dir="${dir.build.test}">
                    <include name="**/Test*.class" />
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!-- Documentation target -->

    <target name="doc">
      <mkdir dir="docs/html"/>
       <javadoc packagenames="com.paradoxwebsolutions.*" destdir = "docs/html" version = "true" windowtitle = "Chatbot Application" private="yes">
            <fileset dir="src/main/java">
                <include name="**/*.java"/>
                <!--
                    <exclude name="my/jaxb/generated/source/*.java"/>
                -->
            </fileset>
            <classpath refid="classpath.compile"/>
         <doctitle><![CDATA[Responsio Service]]></doctitle>
             <bottom>
                <![CDATA[Copyright Â© 2023. All Rights Reserved.]]>
             </bottom>
             <group title = "Responsio Packages" packages = "com.paradoxwebsolutions.*"/>
      </javadoc>
      <echo message = "javadoc has been generated!" />
     </target>


    <!-- Download necessary binary data -->

    <target name="libs" description="Download dependency libraries">
        <mkdir dir="libs"/>
        <get skipexisting="true" src="https://repo1.maven.org/maven2/jakarta/servlet/jakarta.servlet-api/${version.servlet-api}/jakarta.servlet-api-${version.servlet-api}.jar" dest="libs" />
        <get skipexisting="true" src="https://repo1.maven.org/maven2/org/apache/opennlp/opennlp-tools/${version.opennlp}/opennlp-tools-${version.opennlp}.jar" dest="libs" />
        <get skipexisting="true" src="https://repo1.maven.org/maven2/com/google/code/gson/gson/${version.gson}/gson-${version.gson}.jar" dest="libs" />
        <get skipexisting="true" src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/${version.hamcrest}/hamcrest-core-${version.hamcrest}.jar" dest="libs" />
        <get skipexisting="true" src="https://repo1.maven.org/maven2/junit/junit/${version.junit}/junit-${version.junit}.jar" dest="libs" />
    </target>

    <target name="models" description="Download runtime models">
        <mkdir dir="data/models/opennlp"/>
        <get skipexisting="true" src="https://dlcdn.apache.org/opennlp/models/ud-models-1.0/opennlp-en-ud-ewt-pos-1.0-1.9.3.bin" dest="data/models/opennlp/en-pos-maxent.bin" />
        <get skipexisting="true" src="https://raw.githubusercontent.com/richardwilly98/elasticsearch-opennlp-auto-tagging/master/src/main/resources/models/en-lemmatizer.dict" dest="data/models/opennlp" />
        <get skipexisting="true" src="https://dlcdn.apache.org/opennlp/models/langdetect/1.8.3/langdetect-183.bin" dest="data/models/opennlp/lang.bin" />
    </target>

    <target name="downloads" depends="libs,models" description="Download all dependencies" />

</project>
